<Window
    x:Class="BatchRename.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:brc="clr-namespace:BRControl;assembly=BRControl"
    xmlns:ct="clr-namespace:BatchRename.Themes.CustomControl"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:lib="clr-namespace:BatchRename.Lib"
    xmlns:local="clr-namespace:BatchRename"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Name="Window"
    Width="880"
    Height="520"
    Loaded="Window_Loaded"
    SizeChanged="Window_SizeChanged"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <Window.InputBindings>
        <KeyBinding
            Key="{Binding SaveOrSaveAsCommand.Gesture.Key}"
            Command="{Binding SaveOrSaveAsCommand}"
            Modifiers="{Binding SaveOrSaveAsCommand.Gesture.Modifiers}" />

        <KeyBinding
            Key="{Binding OpenCommand.Gesture.Key}"
            Command="{Binding OpenCommand}"
            Modifiers="{Binding OpenCommand.Gesture.Modifiers}" />

        <KeyBinding
            Key="{Binding NewCommand.Gesture.Key}"
            Command="{Binding NewCommand}"
            Modifiers="{Binding NewCommand.Gesture.Modifiers}" />

        <KeyBinding
            Key="{Binding ImportCommand.Gesture.Key}"
            Command="{Binding ImportCommand}"
            Modifiers="{Binding ImportCommand.Gesture.Modifiers}" />

        <KeyBinding
            Key="{Binding ExportCommand.Gesture.Key}"
            Command="{Binding ExportCommand}"
            Modifiers="{Binding ExportCommand.Gesture.Modifiers}" />

        <KeyBinding
            Key="{Binding ExitCommand.Gesture.Key}"
            Command="{Binding ExitCommand}"
            Modifiers="{Binding ExitCommand.Gesture.Modifiers}" />

        <KeyBinding
            Key="{Binding AddRuleCommand.Gesture.Key}"
            Command="{Binding AddRuleCommand}"
            Modifiers="{Binding AddRuleCommand.Gesture.Modifiers}" />

        <KeyBinding
            Key="{Binding AddFolderCommand.Gesture.Key}"
            Command="{Binding AddFolderCommand}"
            Modifiers="{Binding AddFolderCommand.Gesture.Modifiers}" />

        <KeyBinding
            Key="{Binding AddFileCommand.Gesture.Key}"
            Command="{Binding AddFileCommand}"
            Modifiers="{Binding AddFileCommand.Gesture.Modifiers}" />

    </Window.InputBindings>

    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="50" />
                </Setter.Value>
            </Setter>

            <Setter Property="MinWidth" Value="400" />
            <Setter Property="MinHeight" Value="200" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <DockPanel Background="{DynamicResource BackgroundColor}" LastChildFill="True">

                            <AdornerDecorator DockPanel.Dock="Top">
                                <ct:TitleBar
                                    x:Name="TopMenu"
                                    Height="{DynamicResource TitleBarHeight}"
                                    AddFileCommand="{Binding AddFileCommand}"
                                    AddFolderCommand="{Binding AddFolderCommand}"
                                    AddRuleCommand="{Binding AddRuleCommand}"
                                    ExitCommand="{Binding ExitCommand}"
                                    ExportCommand="{Binding ExportCommand}"
                                    ImportCommand="{Binding ImportCommand}"
                                    NewCommand="{Binding NewCommand}"
                                    OpenCommand="{Binding OpenCommand}"
                                    ProjectName="{Binding CurrentProjectName}"
                                    SaveCommand="{Binding SaveOrSaveAsCommand}"
                                    StartCommand="{Binding ConvertCommand}" />
                            </AdornerDecorator>

                            <AdornerDecorator>
                                <ContentPresenter />
                            </AdornerDecorator>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>

    <Window.Resources>
        <lib:BreakpointConverter x:Key="BreakPointConverter" />

        <Style x:Key="NormalWidthContainerStyle" TargetType="Grid">
            <Setter Property="Visibility" Value="Visible" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding ActualWidth, ElementName=Window, Converter={StaticResource BreakPointConverter}, ConverterParameter=1}" Value="Small">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>

                <DataTrigger Binding="{Binding ActualWidth, ElementName=Window, Converter={StaticResource BreakPointConverter}, ConverterParameter=2}" Value="Medium">
                    <Setter Property="Margin" Value="30,10,30,20" />
                </DataTrigger>

                <DataTrigger Binding="{Binding ActualWidth, ElementName=Window, Converter={StaticResource BreakPointConverter}, ConverterParameter=3}" Value="Normal">
                    <Setter Property="Margin" Value="40,10,40,25" />
                </DataTrigger>

                <DataTrigger Binding="{Binding ActualWidth, ElementName=Window, Converter={StaticResource BreakPointConverter}, ConverterParameter=4}" Value="Large">
                    <Setter Property="Margin" Value="50,10,50,30" />
                </DataTrigger>

                <DataTrigger Binding="{Binding ActualWidth, ElementName=Window, Converter={StaticResource BreakPointConverter}}" Value="ExtraLarge">
                    <Setter Property="Margin" Value="70,10,70,35" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SmallWidthContainerStyle" TargetType="Grid">
            <Setter Property="Visibility" Value="Collapsed" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding ActualWidth, ElementName=Window, Converter={StaticResource BreakPointConverter}, ConverterParameter=1}" Value="Small">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid AllowDrop="True" DragLeave="DragLeave_Hide">
        <!--  - Normal Width Layout  -->
        <Grid Style="{StaticResource NormalWidthContainerStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="15" />
                <ColumnDefinition Width="6*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <DockPanel Name="RulePanel" LastChildFill="True">
                <TextBlock DockPanel.Dock="Top" Style="{StaticResource H1}">Rules</TextBlock>

                <Grid Margin="{StaticResource PaddingTopSmall}">
                    <!--  Separate: DropShadowEffect performance  -->
                    <Border
                        Background="{StaticResource SurfaceColor}"
                        CornerRadius="{StaticResource Radius}"
                        Effect="{StaticResource DropShadowLight}" />

                    <Border Padding="{StaticResource PaddingXLargeYMedium}">
                        <ct:RuleControl
                            x:Name="ruleControl"
                            ItemsSource="{Binding PickedRules}"
                            OnAddClick="RuleControl_OnAddClick"
                            OnDownClick="ruleControl_OnDownClick"
                            OnRemoveClick="RuleControl_OnRemoveClick"
                            OnRowDoubleClick="ruleControl_OnRowDoubleClick"
                            OnUpClick="ruleControl_OnUpClick" />
                    </Border>
                </Grid>
            </DockPanel>

            <DockPanel
                Name="FilePanel"
                Grid.Column="2"
                Focusable="False"
                LastChildFill="True">
                <TextBlock DockPanel.Dock="Top" Style="{StaticResource H1}">Files</TextBlock>

                <!--  Separate: DropShadowEffect performance  -->
                <Grid
                    x:Name="FilePanel_Grid"
                    Margin="{StaticResource PaddingTopSmall}"
                    AllowDrop="True"
                    DragEnter="DragEnter_Show">
                    <Border
                        Background="{StaticResource SurfaceColor}"
                        CornerRadius="{StaticResource Radius}"
                        Effect="{StaticResource DropShadowLight}" />

                    <Border Padding="{DynamicResource PaddingXLargeYMedium}">
                        <ct:FilesControl
                            x:Name="filesControl"
                            ItemsSource="{Binding ConvertNodes}"
                            OnAddFileClick="FilesControl_OnAddFileClick"
                            OnAddFolderClick="filesControl_OnAddFolderClick" />
                    </Border>
                </Grid>
            </DockPanel>

        </Grid>

        <!--  Small Width Layout  -->
        <!--<Grid Style="{StaticResource SmallWidthContainerStyle}">
            <ScrollViewer Background="Black">
                <StackPanel Margin="30,20">
                    <ContentControl
                        Height="{Binding ActualHeight,
                                         ElementName=Window}"
                        MinHeight="200"
                        MaxHeight="500"
                        Content="{StaticResource RulePanel}" />

                    <ContentControl
                        Height="{Binding ActualHeight,
                                         ElementName=Window}"
                        MinHeight="200"
                        MaxHeight="500"
                        Margin="{StaticResource PaddingTopLarge}"
                        Content="{StaticResource FilePanel}" />
                </StackPanel>
            </ScrollViewer>
        </Grid>-->

    </Grid>
</Window>